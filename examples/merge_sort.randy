#include vector

proc merge dest, left, right in
    var i = 0;
    var j = 0;
    var k = 0;

    while i < vector_len(left) and j < vector_len(right) do
        if vector_get(left, i) <= vector_get(right, j) then
            vector_set(dest, k, vector_get(left, i));
            i = i + 1;
        else
            vector_set(dest, k, vector_get(right, j));
            j = j + 1;
        end
        k = k + 1;
    done

    // copy remaining elements from left
    while i < vector_len(left) do
        vector_set(dest, k, vector_get(left, i));
        i = i + 1;
        k = k + 1;
    done

    // copy remaining elements from right
    while j < vector_len(right) do
        vector_set(dest, k, vector_get(right, j));
        j = j + 1;
        k = k + 1;
    done
end

proc merge_sort arr in
    if vector_len(arr) <= 1 then
        return arr;
    end

    var mid = vector_len(arr) / 2;
    var left = make_vector(mid);
    var right = make_vector(vector_len(arr) - mid);

    var i = 0;
    while i < mid do
        vector_push(left, vector_get(arr, i));
        i = i + 1;
    done

    i = mid;
    while i < vector_len(arr) do
        vector_push(right, vector_get(arr, i));
        i = i + 1;
    done

    var new_left = merge_sort(left);
    var new_right = merge_sort(right);
    merge(arr, new_left, new_right);

    if new_left != left then
        free_vector(left);
    end
    if new_right != right then
        free_vector(right);
    end
    free_vector(new_left);
    free_vector(new_right);

    return arr;
end

proc main in
    var arr = make_vector(10);
    vector_push(arr, 5);
    vector_push(arr, 2);
    vector_push(arr, 9);
    vector_push(arr, 1);
    vector_push(arr, 7);
    vector_push(arr, 8);
    vector_push(arr, 3);
    vector_push(arr, 6);
    vector_push(arr, 4);
    vector_push(arr, 0);

    printf("Unsorted vector:\n");
    var i = 0;
    while i < vector_len(arr) do
        printf("%d ", vector_get(arr, i));
        i = i + 1;
    done
    putchar('\n');

    merge_sort(arr);

    printf("Sorted vector:\n");
    i = 0;
    while i < vector_len(arr) do
        printf("%d ", vector_get(arr, i));
        i = i + 1;
    done
    putchar('\n');

    free_vector(arr);
    return 0;
end