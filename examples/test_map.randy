#include std/core
#include std/map
#include std/string


def test msg, cond in
    if cond then
        printf("pass: %s\n", msg);
    else
        printf("fail: %s\n", msg);
    end
end

def cstr_hash cstr: cstr -> int in
    var hash = 5381;
    var c = cast(u8@(cstr), char);
    while c do
        hash = hash * 33 + c;
        c = cast(u8@(cstr), char);
        cstr += 1;
    end
    return hash;
end

def test_cstr_map in
    printf("Testing set with cstrings.\n");
    var map = make_map(16, cstr_eq, cstr_hash);

    test("map is empty", 0 == map_len(map));

    map_set(map, "hello world", 42);
    test("map length is 1", 1 == map_len(map));
    test("map contains \"hello world\"", map_find(map, "hello world"));
    var pair = map_find(map, "hello world");
    if pair != NULL then
        test("map maps \"hello world\" to 42", 42 == map_pair_val(pair));
    end

    map_set(map, "hello world", 123);
    test("map length is 1", 1 == map_len(map));
    pair = map_find(map, "hello world");
    if pair != NULL then
        test("map maps \"hello world\" to 123", 123 == map_pair_val(pair));
    end

    map_set(map, "helloworld", 456);
    test("map length is 2", 2 == map_len(map));
    test("map contains \"helloworld\"", map_find(map, "helloworld"));
    pair = map_find(map, "helloworld");
    if pair != NULL then
        test("map maps \"helloworld\" to 456", 456 == map_pair_val(pair));
    end

    map_remove(map, "hello world");
    test("map supports removal", 1 == map_len(map));
    test("map no longer contains \"hello world\"", not map_find(map, "hello world"));
end

def main in
    test_cstr_map();
    return 0;
end
