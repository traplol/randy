
#include std/core

struct Bar in
    x: int;
    y: int;
    z: int;
end

struct Foo in
    a: int;    // 0
    b: int;    // 8
    c: char;   // 16
    d: char;   // 17
    e: int;    // 24
    f: Bar;    // 32
    g: int;    // 56
end

def main in
    printf("__offsetof(Foo::a) = %d\n", __offsetof(Foo::a));
    printf("__offsetof(Foo::b) = %d\n", __offsetof(Foo::b));
    printf("__offsetof(Foo::c) = %d\n", __offsetof(Foo::c));
    printf("__offsetof(Foo::d) = %d\n", __offsetof(Foo::d));
    printf("__offsetof(Foo::e) = %d\n", __offsetof(Foo::e));
    printf("__offsetof(Foo::f) = %d\n", __offsetof(Foo::f));
    printf("__offsetof(Foo::f.x) = %d\n", __offsetof(Foo::f.x));
    printf("__offsetof(Foo::f.y) = %d\n", __offsetof(Foo::f.y));
    printf("__offsetof(Foo::f.z) = %d\n", __offsetof(Foo::f.z));
    printf("__offsetof(Foo::g) = %d\n", __offsetof(Foo::g));

    var f: Foo&;
    printf("__offsetof(f.a) = %d\n", __offsetof(f.a));
    printf("__offsetof(f.b) = %d\n", __offsetof(f.b));
    printf("__offsetof(f.c) = %d\n", __offsetof(f.c));
    printf("__offsetof(f.d) = %d\n", __offsetof(f.d));
    printf("__offsetof(f.e) = %d\n", __offsetof(f.e));
    printf("__offsetof(f.f) = %d\n", __offsetof(f.f));
    printf("__offsetof(f.f.x) = %d\n", __offsetof(f.f.x));
    printf("__offsetof(f.f.y) = %d\n", __offsetof(f.f.y));
    printf("__offsetof(f.f.z) = %d\n", __offsetof(f.f.z));
    printf("__offsetof(f.g) = %d\n", __offsetof(f.g));
    return 0;
end

