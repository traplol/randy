
#include core
#include memory

const TSTRING_buffer = 0;
const TSTRING_length = 8;
const TSTRING_capacity = 16;
const sizeof_TSTRING = 24;

proc make_string init in
    var string = malloc(sizeof_TSTRING);
    var buf = malloc(init);

    u64!(string + TSTRING_buffer, buf);
    u64!(string + TSTRING_length, 0);
    u64!(string + TSTRING_capacity, init);
    
    return string;
end

proc free_string string in
    free(u64@(string));
    free(string);
end

proc string_buf string in
    return u64@(string);
end

proc string_len string in
    return u64@(string + TSTRING_length);
end

proc string_cap string in
    return u64@(string + TSTRING_capacity);
end

proc string_get string, idx in
    return u8@(u64@(string) + idx);
end

proc string_set string, idx, val in
    u8!(u64@(string) + idx, val);
end

proc string_resize string, new_cap in
    var new = malloc(new_cap);
    var old = u64@(string);
    var len = string_len(string);
    if new_cap < len then
        len = new_cap;
    end
    memcpy(new, old, len);
    free(old);
    u64!(string, new);
    u64!(string + TSTRING_length, len);
    u64!(string + TSTRING_capacity, new_cap);
end

proc string_push string, val in
    var len = string_len(string);
    var cap = string_cap(string);
    if len == cap then
        string_resize(string, 2 * cap);
    end
    string_set(string, len, val);
    u64!(string + TSTRING_length, len+1);
end

proc string_from_cstr cstr in
    var string = make_string(2);
    while u8@(cstr) do
        string_push(string, u8@(cstr));
        cstr = cstr + 1;
    done
    return string;
end

proc string_eq string_a, string_b in
    var a_len = string_len(string_a);
    var b_len = string_len(string_b);
    if a_len != b_len then
        return false;
    end

    var i = 0;
    while i < a_len do
        if string_get(string_a, i) != string_get(string_b, i) then
            return false;
        end
        i = i + 1;
    done
    return true;
end

proc string_cstr string in
    var len = string_len(string);
    if len == string_cap(string) then
        string_resize(string, len+1);
    end
    string_set(string, len, 0);
    return string_buf(string);
end

proc cstr_eq cstr_a, cstr_b in
    if cstr_a == cstr_b then
        return true;
    end
    if not cstr_a or not cstr_b then
        return false;
    end

    var a = u8@(cstr_a);
    var b = u8@(cstr_b);
    while a == b and a do
        a = u8@(cstr_a);
        b = u8@(cstr_b);
        cstr_a = cstr_a + 1;
        cstr_b = cstr_b + 1;
    done
    return a == b;
end