
#include string
#include core

const TVECTOR_buffer = 0;
const TVECTOR_length = 8;
const TVECTOR_capacity = 16;
const sizeof_TVECTOR = 24;
const sizeof_TVECTOR_ELEMENT = sizeof_PTR;

proc make_vector init: int -> vector in
    var self = make_string(init * sizeof_TVECTOR_ELEMENT);
    return cast(self, vector);
end

proc free_vector self: vector in
    free_string(cast(self, string&));
end

proc vector_buf self: vector -> ptr in
    return cast(u64@(self), ptr);
end

proc vector_len self: vector -> int in
    return u64@(self + TVECTOR_length) / sizeof_TVECTOR_ELEMENT;
end

proc vector_cap self: vector -> int in
    return u64@(self + TVECTOR_capacity) / sizeof_TVECTOR_ELEMENT;
end

proc vector_get self: vector, idx: int -> ptr in
    // TODO: Bounds check & abort
    return cast(u64@(u64@(self) + (idx * sizeof_TVECTOR_ELEMENT)), ptr);
end

proc vector_set self: vector, idx: int, val: ptr in
    // TODO: Bounds check & abort
    u64!(u64@(self) + (idx * sizeof_TVECTOR_ELEMENT), val);
end

proc vector_resize self: vector, new_cap: int in
    string_resize(cast(self, string&), new_cap * sizeof_TVECTOR_ELEMENT);
end

proc vector_push self: vector, val: ptr in
    var len = string_len(cast(self, string&));
    var cap = string_cap(cast(self, string&));
    if len >= cap then
        string_resize(cast(self, string&), (2 * cap) + sizeof_TVECTOR_ELEMENT);
    end
    u64!(u64@(self) + len, val);
    u64!(self + TVECTOR_length, len + sizeof_TVECTOR_ELEMENT);
end

proc vector_pop self: vector in
    var len = string_len(cast(self, string&));
    if len > 0 then
        u64!(self + TVECTOR_length, len - sizeof_TVECTOR_ELEMENT);
    else
        printf("ERROR: vector_pop out of bounds.\n");
        abort();
    end
end

proc vector_back self: vector -> ptr in
    var len = vector_len(self);
    if len > 0 then
        return cast(u64@(u64@(self) + ((len - 1) * sizeof_TVECTOR_ELEMENT)), ptr);
    end
    printf("ERROR: vector_back out of bounds.\n");
    abort();
end

proc vector_set_len self: vector, len: int in
    string_set_len(cast(self, string&), len * sizeof_TVECTOR_ELEMENT);
end
